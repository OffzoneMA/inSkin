{
	"info": {
		"_postman_id": "fb064df6-aa65-40fb-b78b-f30db4ad14b5",
		"name": "novachic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29049422"
	},
	"item": [
		{
			"name": "get profile image and visualize it",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"// Extract the image data from the response\r",
							"const imageData = responseData.data.data;\r",
							"\r",
							"// Convert the image data from bytes to a base64 string\r",
							"const base64ImageData = imageData.map(byte => String.fromCharCode(byte)).join('');\r",
							"const imageUrl = 'data:' + responseData.contentType + ';base64,' + btoa(base64ImageData);\r",
							"\r",
							"// Display the image in Postman response body\r",
							"pm.visualizer.set(\r",
							"    `\r",
							"    <div>\r",
							"        <h3>${responseData.name}</h3>\r",
							"        <img src=\"${imageUrl}\" alt=\"${responseData.name}\" />\r",
							"    </div>\r",
							"    `,\r",
							"    {}\r",
							");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://{{API_URL}}/auth/profile-image/6517645e1776a81824a64e4a",
					"protocol": "http",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"auth",
						"profile-image",
						"6517645e1776a81824a64e4a"
					]
				}
			},
			"response": []
		},
		{
			"name": "put profile image",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "mario.png"
						},
						{
							"key": "_id",
							"value": "6517645e1776a81824a64e4a",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{API_URL}}/auth/update-profile-image",
					"protocol": "http",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"auth",
						"update-profile-image"
					]
				}
			},
			"response": []
		},
		{
			"name": "post tea image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "mario.png"
						},
						{
							"key": "name",
							"value": "test",
							"type": "text"
						},
						{
							"key": "description",
							"value": "test",
							"type": "text"
						},
						{
							"key": "keywords",
							"value": "test",
							"type": "text"
						},
						{
							"key": "origin",
							"value": "test",
							"type": "text"
						},
						{
							"key": "brew_time",
							"value": "1",
							"type": "text"
						},
						{
							"key": "temperature",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{API_URL}}/products/tea",
					"protocol": "http",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"products",
						"tea"
					]
				}
			},
			"response": []
		},
		{
			"name": "get tea image and visualize it",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const responseData = pm.response.json();",
							"",
							"// Extract the image data from the response",
							"const imageData = responseData[0].data.data;",
							"",
							"// Convert the image data from bytes to a base64 string",
							"const base64ImageData = imageData.map(byte => String.fromCharCode(byte)).join('');",
							"const imageUrl = 'data:' + responseData[0].contentType + ';base64,' + btoa(base64ImageData);",
							"",
							"// Display the image in Postman response body",
							"pm.visualizer.set(",
							"    `",
							"    <div>",
							"        <h3>${responseData[0].name}</h3>",
							"        <img src=\"${imageUrl}\" alt=\"${responseData[0].name}\" />",
							"    </div>",
							"    `,",
							"    {}",
							");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "test",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "mario.png"
						},
						{
							"key": "description",
							"value": "test",
							"type": "text"
						},
						{
							"key": "keywords",
							"value": "test",
							"type": "text"
						},
						{
							"key": "origin",
							"value": "test",
							"type": "text"
						},
						{
							"key": "brew_time",
							"value": "1",
							"type": "text"
						},
						{
							"key": "temperature",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://192.168.11.100:8000/products/tea/images",
					"protocol": "http",
					"host": [
						"192",
						"168",
						"11",
						"100"
					],
					"port": "8000",
					"path": [
						"products",
						"tea",
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "post profile picture",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}